<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified"
    targetNamespace="https://github.com/mamift/Indicium" xmlns="https://github.com/mamift/Indicium">
    <xs:element name="TokenContext">
        <xs:annotation>
            <xs:documentation>The root element for definition a list of Tokens or TokenGroups.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence maxOccurs="1">
                <xs:element ref="Token" maxOccurs="unbounded" minOccurs="1"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="TokenGroup"/>
            </xs:sequence>
            <xs:attributeGroup ref="CodeGenAttrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="TokenGroup">
        <xs:annotation>
            <xs:documentation>A TokenGroup defines a group of Token definitions; it is merely a way of grouping Tokens into categories. This is different from NestedTokens that compound multiple Token defintions and treats them as one.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="Token"/>
            </xs:sequence>
            <xs:attributeGroup ref="CodeGenAttrs"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="Token" type="TToken">
        <xs:annotation>
            <xs:documentation>A token definition. The value for this element should be a C#  Regex-compliant string (System.Text.RegularExpressions).</xs:documentation>
        </xs:annotation>
        <xs:key name="KeyIdentifier">
            <xs:annotation>
                <xs:documentation>The @Id attribute will alawys be unique.</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="./Token"/>
            <xs:field xpath="@Id"/>
        </xs:key>
    </xs:element>
    <xs:element name="Lexeme">
        <xs:annotation>
            <xs:documentation>Represents a specific instance of processed characters that were matched against a Token definition.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:simpleContent>
                <xs:extension base="xs:string">
                    <xs:attributeGroup ref="LexemeAttrs"/>
                </xs:extension>
            </xs:simpleContent>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="RegexString">
        <xs:annotation>
            <xs:documentation>Whitespace is collapsed according to XSD schema type rules for the xs:string type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:normalizedString">
            <xs:whiteSpace value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:attributeGroup name="TokenAttrs">
        <xs:attribute name="EvaluationOrder" type="xs:int">
            <xs:annotation>
                <xs:documentation>Determines the relative order this Token is evaluated. Higher values imply lower evaluation order.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:complexType name="TToken" mixed="true">
        <xs:annotation>
            <xs:documentation>The base schema type for Tokens. Whitespace is collapsed.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="RegexString">
                <xs:attributeGroup ref="TokenAttrs"/>
                <xs:attributeGroup ref="IdRefDescription"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:attributeGroup name="IdRefDescription">
        <xs:attribute name="Id" type="xs:ID">
            <xs:annotation>
                <xs:documentation>The unique identifier for this element. This is optional, as a Token element may actually refer to one already defined.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Ref" type="xs:IDREF">
            <xs:annotation>
                <xs:documentation>Refer to another already defined element. Other attributes on this element will be ignored if this attribute has a value.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Description" type="xs:string">
            <xs:annotation>
                <xs:documentation>A description.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="CodeGenAttrs">
        <xs:attribute name="ClassName" type="xs:string">
            <xs:annotation>
                <xs:documentation>Used only for code generation; specifies the class name.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="NamespaceName" type="xs:string">
            <xs:annotation>
                <xs:documentation>Used only for code generation; specify a namespace to use when generating code.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="GenerateEnums" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Generate a public Enum type that enumerates the Tokens defined.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="Visibility" type="xs:string">
            <xs:annotation>
                <xs:documentation>Determines the generated types visiblity: public or internal. Unrecognised values default to public.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>
    <xs:attributeGroup name="TokenGroupAttrs">
        <xs:attribute name="GroupName" type="xs:string"/>
    </xs:attributeGroup>
    <xs:attributeGroup name="LexemeAttrs">
        <xs:attribute name="Id" type="xs:string" use="required"/>
        <xs:attribute name="LineNumber" type="xs:int" use="required"/>
        <xs:attribute name="LineIndex" type="xs:int" use="required"/>
    </xs:attributeGroup>
</xs:schema>
